version: 2.1
executors:
  build-executor:
    docker:
      - image: mobichord/alpine-git:3.11
    environment:
      IMAGE_NAME: andrewpgit/midserver
jobs:
  build:
    executor: build-executor
    working_directory: ~/build

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            echo "Install packages"
            VER='19.03.11'

            apk add py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
            wget -O /tmp/docker-${VER}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${VER}.tgz
            tar -xz -C /tmp -f /tmp/docker-${VER}.tgz
            mv /tmp/docker/* /usr/local/bin/

      - run:
          name: build images
          command: |
            cd app/ ; make  -e IMAGE_NAME=${IMAGE_NAME} -e TAG=latest build

      - run:
          name: Archive docker image.
          command: |
              cd app ; make -e IMAGE_NAME=${IMAGE_NAME}  archive

      - persist_to_workspace:
          root: .
          paths:
            - .


  publish_image:
    executor: build-executor

    steps:
      - attach_workspace:
          at: ~/build

      - setup_remote_docker

      - run:
          name: Load docker image
          command: |
            echo "Install packages"
            VER='19.03.11'
            wget -O /tmp/docker-${VER}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${VER}.tgz
            tar -xz -C /tmp -f /tmp/docker-${VER}.tgz
            mv /tmp/docker/* /usr/local/bin
            docker load -i ~/build/app/image.tar

      - deploy:
          name: deployment
          command: |

            ls -al
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            if  [ -n  "$CIRCLE_BRANCH" ]; then
               
               cd ~/build/ ; make -e IMAGE_NAME=${IMAGE_NAME} release
            fi

            if  [ -n "$CIRCLE_TAG" ]; then
                echo   ${CIRCLE_BRANCH}
                docker tag ${IMAGE_NAME}:latest  ${IMAGE_NAME}:${CIRCLE_TAG}
                make -e IMAGE_NAME=${IMAGE_NAME} -e TAG=${CIRCLE_TAG} release
            fi


workflows:
  version: 2
  build_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      - publish_image:
          requires:
            - build
          context: deployment-nodejs
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master

